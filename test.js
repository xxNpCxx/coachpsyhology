const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
const archetypesData = JSON.parse(fs.readFileSync('./questions.json', 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–ª–ª–æ–≤ (—Ç–∞–∫–∞—è –∂–µ –∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ)
function calculateScores(answers) {
  const scores = new Map();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
  Object.keys(archetypesData).forEach(archetype => {
    scores.set(archetype, 0);
  });
  
  // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤
  answers.forEach(answer => {
    const scoreForAnswer = 3 - answer.answer; // 0->3, 1->2, 2->1, 3->0
    const currentScore = scores.get(answer.archetype) || 0;
    scores.set(answer.archetype, currentScore + scoreForAnswer);
  });
  
  return scores;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
function runTests() {
  console.log('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–ª–ª–æ–≤...\n');
  
  // –¢–µ—Å—Ç 1: –í—Å–µ –æ—Ç–≤–µ—Ç—ã "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω" (0)
  console.log('–¢–µ—Å—Ç 1: –í—Å–µ –æ—Ç–≤–µ—Ç—ã "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω"');
  const testAnswers1 = [
    { archetype: '–ü—Ä–∞–≤–∏—Ç–µ–ª—å', answer: 0 },
    { archetype: '–ü—Ä–∞–≤–∏—Ç–µ–ª—å', answer: 0 },
    { archetype: '–ü—Ä–∞–≤–∏—Ç–µ–ª—å', answer: 0 }
  ];
  const scores1 = calculateScores(testAnswers1);
  console.log('–ü—Ä–∞–≤–∏—Ç–µ–ª—å:', scores1.get('–ü—Ä–∞–≤–∏—Ç–µ–ª—å'), '–±–∞–ª–ª–æ–≤ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 9)');
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', scores1.get('–ü—Ä–∞–≤–∏—Ç–µ–ª—å') === 9 ? '‚úÖ –ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  console.log('');
  
  // –¢–µ—Å—Ç 2: –í—Å–µ –æ—Ç–≤–µ—Ç—ã "–≠—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ –º–µ–Ω—è" (3)
  console.log('–¢–µ—Å—Ç 2: –í—Å–µ –æ—Ç–≤–µ—Ç—ã "–≠—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ –º–µ–Ω—è"');
  const testAnswers2 = [
    { archetype: '–®—É—Ç', answer: 3 },
    { archetype: '–®—É—Ç', answer: 3 },
    { archetype: '–®—É—Ç', answer: 3 }
  ];
  const scores2 = calculateScores(testAnswers2);
  console.log('–®—É—Ç:', scores2.get('–®—É—Ç'), '–±–∞–ª–ª–æ–≤ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 0)');
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', scores2.get('–®—É—Ç') === 0 ? '‚úÖ –ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  console.log('');
  
  // –¢–µ—Å—Ç 3: –°–º–µ—à–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
  console.log('–¢–µ—Å—Ç 3: –°–º–µ—à–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
  const testAnswers3 = [
    { archetype: '–í–æ–∏–Ω', answer: 0 }, // 3 –±–∞–ª–ª–∞
    { archetype: '–í–æ–∏–Ω', answer: 1 }, // 2 –±–∞–ª–ª–∞
    { archetype: '–í–æ–∏–Ω', answer: 2 }, // 1 –±–∞–ª–ª
    { archetype: '–í–æ–∏–Ω', answer: 3 }  // 0 –±–∞–ª–ª–æ–≤
  ];
  const scores3 = calculateScores(testAnswers3);
  console.log('–í–æ–∏–Ω:', scores3.get('–í–æ–∏–Ω'), '–±–∞–ª–ª–æ–≤ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 6)');
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', scores3.get('–í–æ–∏–Ω') === 6 ? '‚úÖ –ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  console.log('');
  
  // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä—Ö–µ—Ç–∏–ø–∞
  console.log('–¢–µ—Å—Ç 4: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–∞–ª–ª—ã –¥–ª—è –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤');
  Object.keys(archetypesData).forEach(archetype => {
    const questionCount = archetypesData[archetype].length;
    const maxPossibleScore = questionCount * 3;
    console.log(`${archetype}: ${questionCount} –≤–æ–ø—Ä–æ—Å–æ–≤, –º–∞–∫—Å–∏–º—É–º ${maxPossibleScore} –±–∞–ª–ª–æ–≤`);
  });
  console.log('');
  
  // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–æ–º–µ—Ä–∞–º
  console.log('–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–æ–º–µ—Ä–∞–º');
  const questionsFolder = path.join(__dirname, 'questions');
  const imageFiles = fs.readdirSync(questionsFolder)
    .filter(file => file.match(/^\d+\.jpg$/))
    .map(file => parseInt(file.replace('.jpg', '')))
    .sort((a, b) => a - b);
  
  console.log('–ù–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–æ–º–µ—Ä–∞–º–∏:', imageFiles);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–æ–º–µ—Ä–∞ –∏–∑ questions.json —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
  const allQuestionNumbers = new Set();
  Object.values(archetypesData).forEach(numbers => {
    numbers.forEach(num => allQuestionNumbers.add(parseInt(num)));
  });
  
  const missingImages = Array.from(allQuestionNumbers).filter(num => !imageFiles.includes(num));
  const extraImages = imageFiles.filter(num => !allQuestionNumbers.has(num));
  
  if (missingImages.length === 0 && extraImages.length === 0) {
    console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –≤ questions.json');
  } else {
    if (missingImages.length > 0) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤:', missingImages);
    }
    if (extraImages.length > 0) {
      console.log('‚ö†Ô∏è –õ–∏—à–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–æ–º–µ—Ä–∞–º–∏:', extraImages);
    }
  }
  
  console.log('\nüéØ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests(); 