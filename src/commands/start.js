import { usersPG } from '../pg/users.pg.js';
import { cache } from '../utils/cache.js';

/**
 * –ö–æ–º–∞–Ω–¥–∞ /start - –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –±–æ—Ç–∞
 */

export function registerStartCommand(bot) {
  bot.start(async (ctx) => {
    await handleStart(ctx);
  });
  
  bot.command("start", async (ctx) => {
    await handleStart(ctx);
  });
}

async function handleStart(ctx) {
  try {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await usersPG.upsertUser(ctx);
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –±—ã–ª–æ
    cache.deleteUserState(ctx.from.id);
    
    const welcomeMessage = `
üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*

–ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! üëã

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à–∏ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ –∞—Ä—Ö–µ—Ç–∏–ø—ã –ª–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–æ—Ä–∏–∏ –ö–∞—Ä–ª–∞ –Æ–Ω–≥–∞.

üéØ *–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:*
‚Ä¢ 84 –≤–æ–ø—Ä–æ—Å–∞ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–æ 12 –∞—Ä—Ö–µ—Ç–∏–ø–∞–º
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å–≤–æ–∏—Ö —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω

üí° *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
–ù–∞ –∫–∞–∂–¥–æ–º —Å–ª–∞–π–¥–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞.
–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –≤—ã–±—Ä–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–∂–¥–æ–µ –∏–∑ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –≤–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç.
–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –æ—Ç–≤–µ—á–∞—Ç—å —á–µ—Å—Ç–Ω–æ –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.

–ì–æ—Ç–æ–≤—ã —É–∑–Ω–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ? üöÄ`;

    await ctx.reply(welcomeMessage, {
      parse_mode: 'Markdown',
      reply_markup: {
        keyboard: [
          ['üéØ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'],
          ['‚ÑπÔ∏è –û —Ç–µ—Å—Ç–µ', 'üìä –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã']
        ],
        resize_keyboard: true
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
}

export { handleStart };