import { Scenes } from 'telegraf';
import { saveUserComment } from '../pg/comments.pg.js';
import { logger } from '../utils/logger.js';

export const commentScene = new Scenes.BaseScene('comment');

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É
commentScene.enter(async (ctx) => {
  await ctx.reply(
    'üìù *–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ —Ç–µ—Å—Ç–µ*\n\n' +
    '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ —Ç–µ—Å—Ç–µ:\n' +
    '‚Ä¢ –ß—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?\n' +
    '‚Ä¢ –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å?\n' +
    '‚Ä¢ –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∏–ª–∏?\n' +
    '‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ –ª–∏ –¥—Ä—É–∑—å—è–º?\n\n' +
    '–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Å—Ç –ª—É—á—à–µ!',
    {
      parse_mode: 'Markdown',
      reply_markup: {
        keyboard: [['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å']],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
commentScene.on('text', async (ctx) => {
  const commentText = ctx.message.text;
  const userId = ctx.from.id;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–º–µ–Ω—ã
  if (commentText === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') {
    await ctx.reply('‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', {
      reply_markup: {
        keyboard: [
          ['üéØ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'],
          ['‚ÑπÔ∏è –û —Ç–µ—Å—Ç–µ', 'üìä –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã']
        ],
        resize_keyboard: true
      }
    });
    return ctx.scene.leave();
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  if (commentText.length < 10) {
    await ctx.reply(
      '‚ö†Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤).',
      {
        reply_markup: {
          keyboard: [['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å']],
          resize_keyboard: true
        }
      }
    );
    return;
  }

  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await saveUserComment(userId, commentText);

    await ctx.reply(
      '‚úÖ *–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!*\n\n' +
      '–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n\n' +
      '–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω.',
      {
        parse_mode: 'Markdown',
        reply_markup: {
          keyboard: [
            ['üéØ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'],
            ['‚ÑπÔ∏è –û —Ç–µ—Å—Ç–µ', 'üìä –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã']
          ],
          resize_keyboard: true
        }
      }
    );

    logger.info(`üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${commentText.substring(0, 50)}...`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error);
    await ctx.reply(
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      {
        reply_markup: {
          keyboard: [
            ['üéØ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'],
            ['‚ÑπÔ∏è –û —Ç–µ—Å—Ç–µ', 'üìä –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã']
          ],
          resize_keyboard: true
        }
      }
    );
  }

  await ctx.scene.leave();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
commentScene.on('message', async (ctx) => {
  await ctx.reply(
    '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.',
    {
      reply_markup: {
        keyboard: [['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å']],
        resize_keyboard: true
      }
    }
  );
});

// –í—ã—Ö–æ–¥ –∏–∑ —Å—Ü–µ–Ω—ã
commentScene.leave((_ctx) => {
  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
}); 